@page "/settings"
@using Portfolio_MauiNewsfeed.Configuration;
@using System.Text.Json;
@using Portfolio_MauiNewsfeed.Services;
@inject NewsfeedFilter newsfeedFilter
@inject FilterService filterService

<h3>Settings</h3>
<div class="card settings-card">
    <br>
    <h4>
        Filter Settings
    </h4>
    <br />
    <div>
        <br />
        <div class="card-text d-flex justify-content-around">
            Toggle Newsfeed Filtering <ToggleSwitch Value="@Preferences.Get("EnableFilter", false)" ValueChanged="ToggleFilter"></ToggleSwitch>
        </div>
        <br />
        @if (NewsfeedFilters != null)
        {
            foreach (NewsfeedFilter filter in NewsfeedFilters)
            {
                <NewsfeedFilterItem Filter="filter" OnSelectFilter="SetFilter" />
            }
        }

    </div>
</div>

@code {

    public IEnumerable<NewsfeedFilter> NewsfeedFilters { get; set; }

    public void ToggleFilter(bool toggle)
    {
        Preferences.Set("EnableFilter", toggle);
    }

    protected override void OnInitialized()
    {
        NewsfeedFilters = filterService.GetAllNewsfeedFilters();
        var activeFilterTitle = Preferences.Get("ActiveFilter", "None");

        if (activeFilterTitle != "None")
        {
            newsfeedFilter.CopyFilterValues(NewsfeedFilters.Where(x => x.Title == activeFilterTitle).First());
        }

        base.OnInitialized();
    }

    protected override void OnParametersSet()
    {
        NewsfeedFilters ??= filterService.GetAllNewsfeedFilters();
        base.OnParametersSet();
    }

    public void SetFilter(NewsfeedFilter filter)
    {
        if (Preferences.Get("ActiveFilter", "None") == filter.Title)
        {
            newsfeedFilter.Clear();
        }
        newsfeedFilter.CopyFilterValues(filter);
    }
}