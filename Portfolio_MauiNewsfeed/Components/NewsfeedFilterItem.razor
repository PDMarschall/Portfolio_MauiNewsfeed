@using Portfolio_MauiNewsfeed.Filtering;
@inject NewsfeedFilter newsfeedFilter

<div class="card" @onclick="SelectFilter">
    <div class="card-body @(this.IsActive ? "font-weight-bold": "font-weight-normal")">
        <div class="card-text text-left justify-content-around">
            @Filter.Title
            <div class="card-text">
                @if (Filter.UserWhitelist.Count > 0)
                {
                    <div>
                        Whitelisted words: @String.Join(',', Filter.UserWhitelist)
                    </div>
                }
            </div>
            <div class="card-text">
                @if (Filter.UserBlacklist.Count > 0)
                {
                    <div>
                        Blacklisted words: @String.Join(',', Filter.UserBlacklist)
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@code {

    [Parameter]
    public NewsfeedFilter Filter { get; set; }

    public bool IsActive => this.Filter.Title == Preferences.Get("ActiveFilter", "None");

    [Parameter]
    public EventCallback<NewsfeedFilter> OnSelectFilter { get; set; }

    public void SelectFilter()
    {
        if (!IsActive)
        {
            Preferences.Set("ActiveFilter", Filter.Title);
            OnSelectFilter.InvokeAsync(Filter);
        }
        else
            Preferences.Set("ActiveFilter", "None");
    }

}
