@using Portfolio_MauiNewsfeed.Filtering;

<div>
    <EditForm Model="_filterInputModel" OnValidSubmit="SubmitForm">
        <DataAnnotationsValidator />
        <ValidationSummary/>
        <label for="Title">Title</label>
        <InputText @bind-Value="_filterInputModel.Title" />

        <label for="Whitelist">Whitelist:</label>
        <InputText @bind-Value="_filterInputModel.Whitelist" />

        <label for="Blacklist">Blacklist:</label>
        <InputText @bind-Value="_filterInputModel.Blacklist" />

        <button type="submit">Submit</button>
        <button @onclick="Cancel">Cancel</button>
    </EditForm>
</div>

@code {

    private NewsfeedFilterInputModel _filterInputModel = new NewsfeedFilterInputModel();

    [Parameter]
    public NewsfeedFilter Filter { get; set; }

    [CascadingParameter] 
    BlazoredModalInstance BlazoredModal { get; set; } = default!;

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
    }

    private async Task SubmitForm()
    {
        Filter ??= new NewsfeedFilter();
        Filter = _filterInputModel.ConvertInputModel();
        await BlazoredModal.CloseAsync(ModalResult.Ok(Filter));
    }

    private async Task Cancel() => await BlazoredModal.CancelAsync();

}


