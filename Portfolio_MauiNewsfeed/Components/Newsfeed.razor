@using System.ServiceModel.Syndication;
@using System.Xml;
@using System.Collections.ObjectModel;
@using Portfolio_MauiNewsfeed.Services;
@using System.Diagnostics;
@inject NavigationManager navigationManager
@inject NewsfeedService newsfeedService
@inject WindowService windowService

<p class="text-danger font-weight-bold">@_errorMessage</p>
<br />
@if (_feed != null)
{
    if (Blacklist.Count() > 0 || Whitelist.Count() > 0)
    {
        foreach (SyndicationItem item in _filteredFeed.Items)
        {
            <NewsfeedItem Title="@item.Title.Text" Description="@item.Summary.Text" Link="@item.Links.FirstOrDefault().Uri.ToString()" PublicationDate="@item.PublishDate" />
        }
    }
    else
    {
        foreach (SyndicationItem item in _feed.Items)
        {
            <NewsfeedItem Title="@item.Title.Text" Description="@item.Summary.Text" Link="@item.Links.FirstOrDefault().Uri.ToString()" PublicationDate="@item.PublishDate" />
        }
    }
}
<br />
@code {

    [Parameter]
    public string FeedUrl { get; set; }

    [Parameter]
    public bool IsFiltered { get; set; }

    [Parameter]
    public List<string> Whitelist { get; set; }

    [Parameter]
    public List<string> Blacklist { get; set; }

    private SyndicationFeed _feed;
    private SyndicationFeed _filteredFeed;
    private string _errorMessage;

    protected override void OnInitialized()
    {
        Whitelist ??= new List<string>();
        Blacklist ??= new List<string>();

        var window = windowService.MainWindow;
        window.Activated += (s, e) => GetFeed();

        base.OnInitialized();
    }

    protected override Task OnParametersSetAsync()
    {
        GetFeed();

        return base.OnParametersSetAsync();
    }

    public void GetFeed()
    {
        Debug.WriteLine("Initialize feed");
        try
        {
            _feed = newsfeedService.LoadFeed(FeedUrl);

        }
        catch (Exception e)
        {
            _errorMessage = $"Der skete en fejl: {e.Message}";
        }

        if (_feed != null)
        {
            newsfeedService.InitializeNullEntries(_feed);

            if (IsFiltered)
                _filteredFeed = newsfeedService.ApplyFilter(_feed, Whitelist, Blacklist);
        }
    }
}
